#= require URIjs/URI.js

@RailsHelper = {
  image_path_table: <%= RailsJsHelper.image_path_table.to_json %>

  asset_path_table: <%= RailsJsHelper.asset_path_table.to_json %>

  named_route_table: <%= RailsJsHelper.named_route_table.to_json %>

  config: <%= RailsJsHelper.config_table.to_json %>

  imagePath: (path) ->
    RailsHelper.image_path_table[path]

  assetPath: (path) ->
    RailsHelper.asset_path_table[path]

  imageTag: (path, attributes = {}) ->
    src = RailsHelper.imagePath(path)
    unless src
      throw new Error("Asset path is nothing on table")
    attrs = []
    for k, v of attributes
      attrs.push("#{k}=\"#{v}\"")
    "<img src=\"#{src}\" #{attrs.join(" ")}>"

  pathFor: (name, options = {}) ->
    uri = RailsHelper._makeURI(name, options)
    uri.toString()

  urlFor: (name, options = {}) ->
    protocol = "http"
    host = location.host

    if options.protocol
      protocol = options.protocol
      delete options.protocol

    if options.host
      host = options.host
      delete options.host

    uri = RailsHelper._makeURI(name, options)
    uri.host(host)
    uri.protocol(protocol)
    uri.toString()

  _makeURI: (name, options = {}) ->
    base = RailsHelper.named_route_table[name]
    unless base
      throw new Error("Routing is nothing on table")
    uri = new URI(base)
    uri.suffix(options.format) if options.format?
    delete options.format
    uri.query(options)
    uri

  routeNames: ->
    names = []
    for name, _url of RailsHelper.named_route_table
      names.push(name)
    names
}
